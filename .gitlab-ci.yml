stages:
  - build
  - test
  - deploy

variables:
  IMAGE_NAME: tahmasbi/myrepo

build:
  stage: build
  image: docker
  script:
    - echo "Logging into Docker Hub..."
    - echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS"
    - echo "Building Docker image with 2 tags..."
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA -t $IMAGE_NAME:latest .
    - echo "Pushing Docker image with commit tag..."
    - docker push $IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - echo "Pushing Docker image with latest tag..."
    - docker push $IMAGE_NAME:latest
  rules:
    # Auto build on dev branch
    - if: '$CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "dev2"'
      when: on_success
    # Manual build on merge request or tag
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_TAG'
      when: on_success
    # Auto build on main after merge
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success

test:
  stage: test
  trigger:
    include: "test-ci.yml"
    strategy: depend
  rules:
    # Auto test on dev branch
    - if: '$CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "dev2"'
      when: on_success
    # Manual test on merge request or tag
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_TAG'
      when: on_success
    # Auto test on main after merge
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success

deploy:
  stage: deploy
  image: docker.arvancloud.ir/dtzar/helm-kubectl:3.18
  script:
    - mkdir -p ~/.kube && chmod 700 ~/.kube
    - echo "$KUBE_CONFIG" > ~/.kube/config
    - sed -i "s|:latest|:$CI_COMMIT_SHORT_SHA|g" deployment.yaml
    - kubectl apply -f service.yaml
    - kubectl apply -f ingress.yaml
    - kubectl apply -f deployment.yaml
  rules:
    # Auto deploy on dev branch
    - if: '$CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH == "dev2"'
      when: on_success
    # Manual deploy on merge request, tag, or main
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_TAG || $CI_COMMIT_BRANCH == "main"'
      when: manual

<<<<<<< HEAD
=======


>>>>>>> dev2
